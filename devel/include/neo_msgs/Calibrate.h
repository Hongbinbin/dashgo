// Generated by gencpp from file neo_msgs/Calibrate.msg
// DO NOT EDIT!


#ifndef NEO_MSGS_MESSAGE_CALIBRATE_H
#define NEO_MSGS_MESSAGE_CALIBRATE_H

#include <ros/service_traits.h>


#include <neo_msgs/CalibrateRequest.h>
#include <neo_msgs/CalibrateResponse.h>


namespace neo_msgs
{

struct Calibrate
{

typedef CalibrateRequest Request;
typedef CalibrateResponse Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;

}; // struct Calibrate
} // namespace neo_msgs


namespace ros
{
namespace service_traits
{


template<>
struct MD5Sum< ::neo_msgs::Calibrate > {
  static const char* value()
  {
    return "b2a9c605bb7a420089b02c6063322298";
  }

  static const char* value(const ::neo_msgs::Calibrate&) { return value(); }
};

template<>
struct DataType< ::neo_msgs::Calibrate > {
  static const char* value()
  {
    return "neo_msgs/Calibrate";
  }

  static const char* value(const ::neo_msgs::Calibrate&) { return value(); }
};


// service_traits::MD5Sum< ::neo_msgs::CalibrateRequest> should match 
// service_traits::MD5Sum< ::neo_msgs::Calibrate > 
template<>
struct MD5Sum< ::neo_msgs::CalibrateRequest>
{
  static const char* value()
  {
    return MD5Sum< ::neo_msgs::Calibrate >::value();
  }
  static const char* value(const ::neo_msgs::CalibrateRequest&)
  {
    return value();
  }
};

// service_traits::DataType< ::neo_msgs::CalibrateRequest> should match 
// service_traits::DataType< ::neo_msgs::Calibrate > 
template<>
struct DataType< ::neo_msgs::CalibrateRequest>
{
  static const char* value()
  {
    return DataType< ::neo_msgs::Calibrate >::value();
  }
  static const char* value(const ::neo_msgs::CalibrateRequest&)
  {
    return value();
  }
};

// service_traits::MD5Sum< ::neo_msgs::CalibrateResponse> should match 
// service_traits::MD5Sum< ::neo_msgs::Calibrate > 
template<>
struct MD5Sum< ::neo_msgs::CalibrateResponse>
{
  static const char* value()
  {
    return MD5Sum< ::neo_msgs::Calibrate >::value();
  }
  static const char* value(const ::neo_msgs::CalibrateResponse&)
  {
    return value();
  }
};

// service_traits::DataType< ::neo_msgs::CalibrateResponse> should match 
// service_traits::DataType< ::neo_msgs::Calibrate > 
template<>
struct DataType< ::neo_msgs::CalibrateResponse>
{
  static const char* value()
  {
    return DataType< ::neo_msgs::Calibrate >::value();
  }
  static const char* value(const ::neo_msgs::CalibrateResponse&)
  {
    return value();
  }
};

} // namespace service_traits
} // namespace ros

#endif // NEO_MSGS_MESSAGE_CALIBRATE_H
