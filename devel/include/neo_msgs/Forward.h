// Generated by gencpp from file neo_msgs/Forward.msg
// DO NOT EDIT!


#ifndef NEO_MSGS_MESSAGE_FORWARD_H
#define NEO_MSGS_MESSAGE_FORWARD_H

#include <ros/service_traits.h>


#include <neo_msgs/ForwardRequest.h>
#include <neo_msgs/ForwardResponse.h>


namespace neo_msgs
{

struct Forward
{

typedef ForwardRequest Request;
typedef ForwardResponse Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;

}; // struct Forward
} // namespace neo_msgs


namespace ros
{
namespace service_traits
{


template<>
struct MD5Sum< ::neo_msgs::Forward > {
  static const char* value()
  {
    return "56fbdb4f932ad85907ae86d07f710cb2";
  }

  static const char* value(const ::neo_msgs::Forward&) { return value(); }
};

template<>
struct DataType< ::neo_msgs::Forward > {
  static const char* value()
  {
    return "neo_msgs/Forward";
  }

  static const char* value(const ::neo_msgs::Forward&) { return value(); }
};


// service_traits::MD5Sum< ::neo_msgs::ForwardRequest> should match 
// service_traits::MD5Sum< ::neo_msgs::Forward > 
template<>
struct MD5Sum< ::neo_msgs::ForwardRequest>
{
  static const char* value()
  {
    return MD5Sum< ::neo_msgs::Forward >::value();
  }
  static const char* value(const ::neo_msgs::ForwardRequest&)
  {
    return value();
  }
};

// service_traits::DataType< ::neo_msgs::ForwardRequest> should match 
// service_traits::DataType< ::neo_msgs::Forward > 
template<>
struct DataType< ::neo_msgs::ForwardRequest>
{
  static const char* value()
  {
    return DataType< ::neo_msgs::Forward >::value();
  }
  static const char* value(const ::neo_msgs::ForwardRequest&)
  {
    return value();
  }
};

// service_traits::MD5Sum< ::neo_msgs::ForwardResponse> should match 
// service_traits::MD5Sum< ::neo_msgs::Forward > 
template<>
struct MD5Sum< ::neo_msgs::ForwardResponse>
{
  static const char* value()
  {
    return MD5Sum< ::neo_msgs::Forward >::value();
  }
  static const char* value(const ::neo_msgs::ForwardResponse&)
  {
    return value();
  }
};

// service_traits::DataType< ::neo_msgs::ForwardResponse> should match 
// service_traits::DataType< ::neo_msgs::Forward > 
template<>
struct DataType< ::neo_msgs::ForwardResponse>
{
  static const char* value()
  {
    return DataType< ::neo_msgs::Forward >::value();
  }
  static const char* value(const ::neo_msgs::ForwardResponse&)
  {
    return value();
  }
};

} // namespace service_traits
} // namespace ros

#endif // NEO_MSGS_MESSAGE_FORWARD_H
