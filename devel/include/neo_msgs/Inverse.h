// Generated by gencpp from file neo_msgs/Inverse.msg
// DO NOT EDIT!


#ifndef NEO_MSGS_MESSAGE_INVERSE_H
#define NEO_MSGS_MESSAGE_INVERSE_H

#include <ros/service_traits.h>


#include <neo_msgs/InverseRequest.h>
#include <neo_msgs/InverseResponse.h>


namespace neo_msgs
{

struct Inverse
{

typedef InverseRequest Request;
typedef InverseResponse Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;

}; // struct Inverse
} // namespace neo_msgs


namespace ros
{
namespace service_traits
{


template<>
struct MD5Sum< ::neo_msgs::Inverse > {
  static const char* value()
  {
    return "a7f6d41d0e750d2b5bb2a289caba9efe";
  }

  static const char* value(const ::neo_msgs::Inverse&) { return value(); }
};

template<>
struct DataType< ::neo_msgs::Inverse > {
  static const char* value()
  {
    return "neo_msgs/Inverse";
  }

  static const char* value(const ::neo_msgs::Inverse&) { return value(); }
};


// service_traits::MD5Sum< ::neo_msgs::InverseRequest> should match 
// service_traits::MD5Sum< ::neo_msgs::Inverse > 
template<>
struct MD5Sum< ::neo_msgs::InverseRequest>
{
  static const char* value()
  {
    return MD5Sum< ::neo_msgs::Inverse >::value();
  }
  static const char* value(const ::neo_msgs::InverseRequest&)
  {
    return value();
  }
};

// service_traits::DataType< ::neo_msgs::InverseRequest> should match 
// service_traits::DataType< ::neo_msgs::Inverse > 
template<>
struct DataType< ::neo_msgs::InverseRequest>
{
  static const char* value()
  {
    return DataType< ::neo_msgs::Inverse >::value();
  }
  static const char* value(const ::neo_msgs::InverseRequest&)
  {
    return value();
  }
};

// service_traits::MD5Sum< ::neo_msgs::InverseResponse> should match 
// service_traits::MD5Sum< ::neo_msgs::Inverse > 
template<>
struct MD5Sum< ::neo_msgs::InverseResponse>
{
  static const char* value()
  {
    return MD5Sum< ::neo_msgs::Inverse >::value();
  }
  static const char* value(const ::neo_msgs::InverseResponse&)
  {
    return value();
  }
};

// service_traits::DataType< ::neo_msgs::InverseResponse> should match 
// service_traits::DataType< ::neo_msgs::Inverse > 
template<>
struct DataType< ::neo_msgs::InverseResponse>
{
  static const char* value()
  {
    return DataType< ::neo_msgs::Inverse >::value();
  }
  static const char* value(const ::neo_msgs::InverseResponse&)
  {
    return value();
  }
};

} // namespace service_traits
} // namespace ros

#endif // NEO_MSGS_MESSAGE_INVERSE_H
