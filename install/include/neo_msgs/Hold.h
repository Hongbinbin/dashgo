// Generated by gencpp from file neo_msgs/Hold.msg
// DO NOT EDIT!


#ifndef NEO_MSGS_MESSAGE_HOLD_H
#define NEO_MSGS_MESSAGE_HOLD_H

#include <ros/service_traits.h>


#include <neo_msgs/HoldRequest.h>
#include <neo_msgs/HoldResponse.h>


namespace neo_msgs
{

struct Hold
{

typedef HoldRequest Request;
typedef HoldResponse Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;

}; // struct Hold
} // namespace neo_msgs


namespace ros
{
namespace service_traits
{


template<>
struct MD5Sum< ::neo_msgs::Hold > {
  static const char* value()
  {
    return "1e3ab015e243c7706c372ab529619c93";
  }

  static const char* value(const ::neo_msgs::Hold&) { return value(); }
};

template<>
struct DataType< ::neo_msgs::Hold > {
  static const char* value()
  {
    return "neo_msgs/Hold";
  }

  static const char* value(const ::neo_msgs::Hold&) { return value(); }
};


// service_traits::MD5Sum< ::neo_msgs::HoldRequest> should match 
// service_traits::MD5Sum< ::neo_msgs::Hold > 
template<>
struct MD5Sum< ::neo_msgs::HoldRequest>
{
  static const char* value()
  {
    return MD5Sum< ::neo_msgs::Hold >::value();
  }
  static const char* value(const ::neo_msgs::HoldRequest&)
  {
    return value();
  }
};

// service_traits::DataType< ::neo_msgs::HoldRequest> should match 
// service_traits::DataType< ::neo_msgs::Hold > 
template<>
struct DataType< ::neo_msgs::HoldRequest>
{
  static const char* value()
  {
    return DataType< ::neo_msgs::Hold >::value();
  }
  static const char* value(const ::neo_msgs::HoldRequest&)
  {
    return value();
  }
};

// service_traits::MD5Sum< ::neo_msgs::HoldResponse> should match 
// service_traits::MD5Sum< ::neo_msgs::Hold > 
template<>
struct MD5Sum< ::neo_msgs::HoldResponse>
{
  static const char* value()
  {
    return MD5Sum< ::neo_msgs::Hold >::value();
  }
  static const char* value(const ::neo_msgs::HoldResponse&)
  {
    return value();
  }
};

// service_traits::DataType< ::neo_msgs::HoldResponse> should match 
// service_traits::DataType< ::neo_msgs::Hold > 
template<>
struct DataType< ::neo_msgs::HoldResponse>
{
  static const char* value()
  {
    return DataType< ::neo_msgs::Hold >::value();
  }
  static const char* value(const ::neo_msgs::HoldResponse&)
  {
    return value();
  }
};

} // namespace service_traits
} // namespace ros

#endif // NEO_MSGS_MESSAGE_HOLD_H
